@mixin acd-btn-color($bg-c,$bd-c) {
	background-color: $bg-c;
	border: 1px solid $bd-c;
}

@mixin acd-btn-shadow($l,$rgba) {

}
@mixin acd-btn-size($height,$lh,$margin-left,$pd1,$pd2,$pd3,$pd4) {
	height: $height;
	line-height: $lh;
	margin-left: $margin-left;
	padding: $pd1 $pd2 $pd3 $pd4;
	width: auto;
}
@mixin transform($motion,$time) {
	-webkit-transition: $motion $time;
	transition: $motion $time;
	-o-transition: $motion $time;
} 

@mixin action($action, $value) {
    -webkit-#{$action}: $value;
    -moz-#{$action}: $value;
    -ms-#{$action}: $value;
    #{$action}: $value;
}
@mixin t($motion,$time) {
	-webkit-transition: $motion $time;
	transition: $motion $time;
	-o-transition: $motion $time;
}
@mixin font-face($font-family,$file-path,$font-weight:normal,$font-style:normal,$asset-pipeline: false){
    @font-face {
        font: {
            family: $font-family;
            weight: $font-weight;
            style: $font-style;
        } 

        @if $asset-pipeline == true {
            src: font-url("#{$file-path}.eot");
            src: font-url("#{$file-path}.eot?#iefix") format("embedded-opentype"),
                 font-url("#{$file-path}.woff") format("woff"),
                 font-url("#{$file-path}.ttf") format("truetype"),
                 font-url("#{$file-path}.svg##{$font-family}") format("svg");
        }
        @else {
            src: url("#{$file-path}.eot");
            src: url("#{$file-path}.eot?#iefix") format("embedded-opentype"),
                 url("#{$file-path}.woff") format("woff"),
                 url("#{$file-path}.ttf") format("truetype"),
                 url("#{$file-path}.svg##{$font-family}") format("svg");    
        }
    }
}